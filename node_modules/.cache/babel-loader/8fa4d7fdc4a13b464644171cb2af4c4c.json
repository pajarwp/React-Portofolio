{"ast":null,"code":"import _classCallCheck from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alphatech/Project React/project_react/src/pages/TicketList.js\";\nimport React, { Component } from 'react';\nimport './assets/css/listticket.css';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'unistore/react';\nimport { actions } from '../store';\nimport '../styles/App.css';\nimport IsiTicketList from './IsiTicketList';\n\nvar TicketList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TicketList, _Component);\n\n  function TicketList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TicketList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TicketList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.weather = function (e) {\n      _this.props.getWeather();\n    };\n\n    _this.translate = function (e) {\n      _this.props.getTranslate();\n    };\n\n    _this.estimasi_harga_batik = function (e) {\n      _this.props.getPrice(_this.props.latitude_asal, _this.props.longitude_asal, _this.props.latitude_tujuan, _this.props.longitude_tujuan);\n\n      var price = Math.round(_this.props.distance_in_km * 1586.726998492);\n      return price;\n    };\n\n    _this.estimasi_harga_citilink = function (e) {\n      _this.props.getPrice(_this.props.latitude_asal, _this.props.longitude_asal, _this.props.latitude_tujuan, _this.props.longitude_tujuan);\n\n      var price = Math.round(_this.props.distance_in_km * 1395.173453997);\n      return price;\n    };\n\n    _this.estimasi_harga_garuda = function (e) {\n      _this.props.getPrice(_this.props.latitude_asal, _this.props.longitude_asal, _this.props.latitude_tujuan, _this.props.longitude_tujuan);\n\n      var price = Math.round(_this.props.distance_in_km * 2419.306184012);\n      return price;\n    };\n\n    _this.estimasi_harga_lion = function (e) {\n      _this.props.getPrice(_this.props.latitude_asal, _this.props.longitude_asal, _this.props.latitude_tujuan, _this.props.longitude_tujuan);\n\n      var price = Math.round(_this.props.distance_in_km * 1271.49321267);\n      return price;\n    };\n\n    _this.estimasi_harga_sriwijaya = function (e) {\n      _this.props.getPrice(_this.props.latitude_asal, _this.props.longitude_asal, _this.props.latitude_tujuan, _this.props.longitude_tujuan);\n\n      var price = Math.round(_this.props.distance_in_km * 1736.04826546);\n      return price;\n    };\n\n    _this.estimasi_harga_lain = function (e) {\n      _this.props.getPrice(_this.props.latitude_asal, _this.props.longitude_asal, _this.props.latitude_tujuan, _this.props.longitude_tujuan);\n\n      var price = Math.round(_this.props.distance_in_km * 2000);\n      return price;\n    };\n\n    _this.moneyExchange = function (e) {\n      // this.props.getRange()\n      _this.props.getNewCurrency(800000, \"JPY\");\n    };\n\n    _this.correctList = function (flight_list) {\n      return flight_list.arrival.iataCode === _this.props.iata_tujuan;\n    };\n\n    return _this;\n  }\n\n  _createClass(TicketList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.getNews();\n      // this.props.airportDetail()\n      // this.props.getWeather()\n      // this.props.getRates()\n      this.props.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filtered = this.props.flight_list.filter(this.correctList);\n      console.log(\"hellooooooo\", filtered); // if (this.props.is_login === false) {\n      //     return <Redirect to = {{ pathname: '/signin' }} />;\n      // } else {\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, filtered.map(function (item, key) {\n        return React.createElement(IsiTicketList, {\n          departureIataCode: item.departure.iataCode,\n          arrivalIataCode: item.arrival.iataCode,\n          airline: item.airline.name,\n          waktu_asal: item.departure.scheduledTime,\n          waktu_tujuan: item.arrival.scheduledTime,\n          estimasi_harga_batik: _this2.estimasi_harga_batik(),\n          estimasi_harga_citilink: _this2.estimasi_harga_citilink(),\n          estimasi_harga_garuda: _this2.estimasi_harga_garuda(),\n          estimasi_harga_lion: _this2.estimasi_harga_lion(),\n          estimasi_harga_sriwijaya: _this2.estimasi_harga_sriwijaya(),\n          estimasi_harga_lain: _this2.estimasi_harga_lain(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      })); // }\n    }\n  }]);\n\n  return TicketList;\n}(Component);\n\nexport default connect('is_login,listNews,listTopNews,airport_id_asal,airport_name_asal,nation_code_asal,latitude_asal,longitude_asal,airport_id_tujuan,airport_name_tujuan,nation_code_tujuan,latitude_tujuan,longitude_tujuan,iata_tujuan,range,weather,rate,new_sum,flight_list, word, distance_in_km', actions)(withRouter(TicketList));","map":{"version":3,"sources":["/home/alphatech/Project React/project_react/src/pages/TicketList.js"],"names":["React","Component","withRouter","connect","actions","IsiTicketList","TicketList","weather","e","props","getWeather","translate","getTranslate","estimasi_harga_batik","getPrice","latitude_asal","longitude_asal","latitude_tujuan","longitude_tujuan","price","Math","round","distance_in_km","estimasi_harga_citilink","estimasi_harga_garuda","estimasi_harga_lion","estimasi_harga_sriwijaya","estimasi_harga_lain","moneyExchange","getNewCurrency","correctList","flight_list","arrival","iataCode","iata_tujuan","getData","filtered","filter","console","log","map","item","key","departure","airline","name","scheduledTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './assets/css/listticket.css';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'unistore/react';\nimport { actions } from '../store';\nimport '../styles/App.css';\nimport IsiTicketList from './IsiTicketList';\n\nclass TicketList extends Component {\n\n    componentDidMount() {\n    // this.props.getNews();\n    // this.props.airportDetail()\n    // this.props.getWeather()\n    // this.props.getRates()\n    this.props.getData()\n    }\n\n    weather = (e) => {\n    this.props.getWeather();\n    }\n\n    translate = (e) => {\n    this.props.getTranslate();\n    }\n\n    estimasi_harga_batik = (e) =>{ \n    this.props.getPrice(this.props.latitude_asal, this.props.longitude_asal, this.props.latitude_tujuan, this.props.longitude_tujuan)\n    const price = Math.round(this.props.distance_in_km * 1586.726998492)\n    return price\n    }\n\n    estimasi_harga_citilink = (e) =>{ \n    this.props.getPrice(this.props.latitude_asal, this.props.longitude_asal, this.props.latitude_tujuan, this.props.longitude_tujuan)\n    const price = Math.round(this.props.distance_in_km * 1395.173453997)\n    return price\n    }\n\n    estimasi_harga_garuda = (e) =>{ \n    this.props.getPrice(this.props.latitude_asal, this.props.longitude_asal, this.props.latitude_tujuan, this.props.longitude_tujuan)\n    const price = Math.round(this.props.distance_in_km * 2419.306184012)\n    return price\n    }\n\n    estimasi_harga_lion = (e) =>{ \n    this.props.getPrice(this.props.latitude_asal, this.props.longitude_asal, this.props.latitude_tujuan, this.props.longitude_tujuan)\n    const price = Math.round(this.props.distance_in_km * 1271.49321267)\n    return price\n    }\n\n    estimasi_harga_sriwijaya = (e) =>{ \n    this.props.getPrice(this.props.latitude_asal, this.props.longitude_asal, this.props.latitude_tujuan, this.props.longitude_tujuan)\n    const price = Math.round(this.props.distance_in_km * 1736.04826546)\n    return price\n    }\n\n    estimasi_harga_lain = (e) =>{ \n    this.props.getPrice(this.props.latitude_asal, this.props.longitude_asal, this.props.latitude_tujuan, this.props.longitude_tujuan)\n    const price = Math.round(this.props.distance_in_km * 2000)\n    return price\n    }\n\n    moneyExchange = (e) => {\n    // this.props.getRange()\n    this.props.getNewCurrency(800000, \"JPY\");\n    }\n\n    correctList = (flight_list) => {\n    return flight_list.arrival.iataCode === this.props.iata_tujuan\n    }\n\n    render() {\n    const filtered = this.props.flight_list.filter(this.correctList)\n    console.log(\"hellooooooo\" ,filtered)\n    // if (this.props.is_login === false) {\n    //     return <Redirect to = {{ pathname: '/signin' }} />;\n    // } else {\n            return (\n                <div>\n                    {filtered.map((item, key) => {\n                        return <IsiTicketList departureIataCode = {item.departure.iataCode} arrivalIataCode = { item.arrival.iataCode } airline = { item.airline.name } waktu_asal = { item.departure.scheduledTime } waktu_tujuan = { item.arrival.scheduledTime } estimasi_harga_batik = { this.estimasi_harga_batik() } estimasi_harga_citilink = { this.estimasi_harga_citilink() } estimasi_harga_garuda = { this.estimasi_harga_garuda() } estimasi_harga_lion = { this.estimasi_harga_lion() } estimasi_harga_sriwijaya = { this.estimasi_harga_sriwijaya() } estimasi_harga_lain = { this.estimasi_harga_lain() }/>\n                    })}\n                </div>\n      );\n  // }\n}\n}\n\nexport default connect(\n    'is_login,listNews,listTopNews,airport_id_asal,airport_name_asal,nation_code_asal,latitude_asal,longitude_asal,airport_id_tujuan,airport_name_tujuan,nation_code_tujuan,latitude_tujuan,longitude_tujuan,iata_tujuan,range,weather,rate,new_sum,flight_list, word, distance_in_km',\n    actions\n)(withRouter(TicketList));"]},"metadata":{},"sourceType":"module"}