{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from 'unistore';\nimport axios from 'axios';\nvar initialState = {\n  api_key: \"\",\n  username: \"\",\n  password: \"\",\n  full_name: \"\",\n  email: \"\",\n  is_login: false,\n  listNews: [],\n  listTopNews: [],\n  search: \"\",\n  iata_asal: \"SUB\",\n  airport_id_asal: \"\",\n  airport_name_asal: \"\",\n  nation_code_asal: \"\",\n  latitude_asal: \"\",\n  longitude_asal: \"\",\n  iata_tujuan: \"CGK\",\n  airport_id_tujuan: \"\",\n  airport_name_tujuan: \"\",\n  nation_code_tujuan: \"\",\n  latitude_tujuan: \"\",\n  longitude_tujuan: \"\",\n  range: \"\",\n  flightList: [],\n  weather: \"\",\n  temperature: \"\",\n  sunrise: \"\",\n  sunset: \"\",\n  rate: \"\"\n};\nvar urlHeadline = 'https://newsapi.org/v2/top-headlines?' + 'country=id&' + 'apiKey=66cd3036f20e42b199d9335f9283b88e';\nvar urlEverything = 'https://newsapi.org/v2/everything?' + 'q=manchester united&' + 'apiKey=66cd3036f20e42b199d9335f9283b88e'; // const keyFlight = 'key=2bd460-34e534';\n// const airportDatabase = 'https://aviation-edge.com/v2/public/airportDatabase';\n// const airportEndpoint = 'codeIataAirport='\n// const iataAirport = 'SUB'\n// const urlAirport = airportDatabase + '?' + keyFlight + '&' + airportEndpoint + iataAirport\n\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, event) {\n      return _defineProperty({}, event.target.name, event.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false\n      };\n    },\n    postLogin: function () {\n      var _postLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                _context.next = 3;\n                return axios.post(\"https://ilfarro1.free.beeceptor.com/signin\", data).then(function (response) {\n                  console.log('post loginnnnnn!!!!', response.data);\n\n                  if (response.data.hasOwnProperty('api_key')) {\n                    store.setState({\n                      'api_key': response.data.api_key,\n                      'is_login': true,\n                      full_name: state.username,\n                      'email': response.data.email\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLogin(_x) {\n        return _postLogin.apply(this, arguments);\n      }\n\n      return postLogin;\n    }(),\n    getNews: function getNews(state) {\n      axios.get(urlEverything).then(function (response) {\n        store.setState({\n          listNews: response.data.articles\n        });\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get(urlHeadline).then(function (response) {\n        store.setState({\n          listTopNews: response.data.articles\n        });\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    doSearch: function doSearch(state, keyword) {\n      var urlSearch = 'https://newsapi.org/v2/everything?' + 'q=' + keyword + '&apiKey=66cd3036f20e42b199d9335f9283b88e';\n      axios.get(urlSearch).then(function (response) {\n        store.setState({\n          listNews: response.data.articles\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // airportDetail: state => {\n    //     axios\n    //     .get(urlAirport)\n    //     .then(function(response) {\n    //         store.setState({ \n    //             'airport_id_asal': response.data[0].airportId,\n    //             'airport_name_asal': response.data[0].nameAirport,\n    //             'nation_code_asal': response.data[0].codeIso2Country,\n    //             'latitude_asal': response.data[0].latitudeAirport,\n    //             'longitude_asal': response.data[0].longitudeAirport\n    //         });\n    //     })\n    //     .catch(function(error) {\n    //        console.log(error); \n    //     });\n    // },\n    // getFlightList: state => {\n    //     axios\n    //     .get(urlAirport)\n    //     .then(function(response) {\n    //         store.setState({ \n    //             'airport_id_asal': response.data[0].airportId,\n    //             'airport_name_asal': response.data[0].nameAirport,\n    //             'nation_code_asal': response.data[0].codeIso2Country,\n    //             'latitude': response.data[0].latitudeAirport,\n    //             'longitude': response.data[0].longitudeAirport\n    //         });\n    //     })\n    //     .catch(function(error) {\n    //        console.log(error); \n    //     });\n    // },\n    getWeather: function () {\n      var _getWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.get(\"http://api.weatherbit.io/v2.0/current?lat=-7.2575&lon=112.7521&key=aa3c976285c64dafa3662f2e99d4bd03\");\n\n              case 3:\n                response = _context2.sent;\n                store.setState({\n                  weather: response.data.data[0].weather.description,\n                  temperature: response.data.data[0].temp,\n                  sunrise: response.data.data[0].sunrise,\n                  sunset: response.data.data[0].sunset\n                });\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      function getWeather(_x2) {\n        return _getWeather.apply(this, arguments);\n      }\n\n      return getWeather;\n    }(),\n    getRates: function () {\n      var _getRates = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(state) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get(\" https://api.exchangeratesapi.io/latest?base=IDR\");\n\n              case 3:\n                response = _context3.sent;\n                store.setState({\n                  weather: response.data.rates.USD\n                });\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      function getRates(_x3) {\n        return _getRates.apply(this, arguments);\n      }\n\n      return getRates;\n    }(),\n    rad: function rad(state, x) {\n      return x * Math.PI / 180;\n    },\n    getRange: function getRange(state, lat_asal, long_asal, lat_tujuan, long_tujuan) {\n      // const rad = function(x) {\n      //     return x * Math.PI / 180;\n      //     };\n      var radius_bumi = 6378137; // Earthâ€™s mean radius in meter\n\n      var latitude = rad(lat_asal - lat_tujuan); // latitude awal - latitude akhir\n\n      var longitude = rad(long_asal - long_tujuan); // longitude awal - longitude akhir\n\n      var a = Math.sin(latitude / 2) * Math.sin(latitude / 2) + Math.cos(rad(lat_tujuan)) * Math.cos(rad(lat_asal)) * Math.sin(longitude / 2) * Math.sin(longitude / 2);\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      var distance_in_km = radius_bumi * c / 1000;\n      var distance = Math.round(distance_in_km);\n      store.setState({\n        range: distance\n      });\n    } // getData: async state => {\n    //     await axios\n    //     .all([\n    //     axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=d11ea5-5d02c1&codeIataAirport=\" + state.iata_asal),\n    //     axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=d11ea5-5d02c1&codeIataAirport=\" + state.iata_tujuan),\n    //     axios.get(\"http://api.weatherbit.io/v2.0/current?lat=-7.2575&lon=112.7521&key=aa3c976285c64dafa3662f2e99d4bd03\"),\n    //     axios.get(\"https://api.exchangeratesapi.io/latest?base=IDR\")\n    //     ])\n    //     .then(\n    //     axios.spread(function(response1, response2, response3, response4) {\n    //     store.setState({ \n    //         airport_id_asal: response1.data[0].airportId,\n    //         airport_name_asal: response1.data[0].nameAirport,\n    //         nation_code_asal: response1.data[0].codeIso2Country,\n    //         latitude_asal: response1.data[0].latitudeAirport,\n    //         longitude_asal: response1.data[0].longitudeAirport\n    //     });\n    //     store.setState({ \n    //         airport_id_tujuan: response2.data[0].airportId,\n    //         airport_name_tujuan: response2.data[0].nameAirport,\n    //         nation_code_tujuan: response2.data[0].codeIso2Country,\n    //         latitude_tujuan: response2.data[0].latitudeAirport,\n    //         longitude_tujuan: response2.data[0].longitudeAirport\n    //     });\n    //     store.setState({weather: response3.data.data[0].weather.description,\n    //         temperature: response3.data.data[0].temp,\n    //         sunrise: response3.data.data[0].sunrise,\n    //         sunset: response3.data.data[0].sunset,\n    //         });\n    //     store.setState({rate: response4.data.rates.USD});\n    //     })\n    //     )\n    //     .catch(function(error) {});\n    //     },\n\n  };\n};","map":{"version":3,"sources":["/home/alphatech/Project React/project_react/src/store.js"],"names":["createStore","axios","initialState","api_key","username","password","full_name","email","is_login","listNews","listTopNews","search","iata_asal","airport_id_asal","airport_name_asal","nation_code_asal","latitude_asal","longitude_asal","iata_tujuan","airport_id_tujuan","airport_name_tujuan","nation_code_tujuan","latitude_tujuan","longitude_tujuan","range","flightList","weather","temperature","sunrise","sunset","rate","urlHeadline","urlEverything","store","actions","setField","state","event","target","name","value","postLogout","postLogin","data","post","then","response","console","log","hasOwnProperty","setState","catch","error","getNews","get","articles","doSearch","keyword","urlSearch","getWeather","description","temp","getRates","rates","USD","rad","x","Math","PI","getRange","lat_asal","long_asal","lat_tujuan","long_tujuan","radius_bumi","latitude","longitude","a","sin","cos","c","atan2","sqrt","distance_in_km","distance","round"],"mappings":"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","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios';\n\nconst initialState = {\n    api_key: \"\",\n    username: \"\",\n    password: \"\",\n    full_name: \"\",\n    email: \"\",\n    is_login: false,\n    listNews: [],\n    listTopNews: [],\n    search: \"\",\n    iata_asal: \"SUB\",\n    airport_id_asal: \"\",\n    airport_name_asal: \"\",\n    nation_code_asal: \"\",\n    latitude_asal: \"\",\n    longitude_asal: \"\",\n    iata_tujuan: \"CGK\",\n    airport_id_tujuan: \"\",\n    airport_name_tujuan: \"\",\n    nation_code_tujuan: \"\",\n    latitude_tujuan: \"\",\n    longitude_tujuan: \"\",\n    range: \"\",\n    flightList: [],\n    weather: \"\",\n    temperature: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    rate: \"\"\n};\n\nconst urlHeadline = 'https://newsapi.org/v2/top-headlines?' + 'country=id&' + 'apiKey=66cd3036f20e42b199d9335f9283b88e';\nconst urlEverything = 'https://newsapi.org/v2/everything?' + 'q=manchester united&' + 'apiKey=66cd3036f20e42b199d9335f9283b88e';\n\n// const keyFlight = 'key=2bd460-34e534';\n// const airportDatabase = 'https://aviation-edge.com/v2/public/airportDatabase';\n// const airportEndpoint = 'codeIataAirport='\n// const iataAirport = 'SUB'\n\n// const urlAirport = airportDatabase + '?' + keyFlight + '&' + airportEndpoint + iataAirport\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n    setField: (state, event) => {\n        return { [event.target.name]: event.target.value };\n    },\n\n    postLogout: state => {\n        return { is_login: false };\n    },\n\n    postLogin: async state => {\n        const data = { username: state.username, password: state.password };\n        await axios\n            .post(\"https://ilfarro1.free.beeceptor.com/signin\", data)\n            .then(response => {\n                console.log('post loginnnnnn!!!!', response.data)\n                if (response.data.hasOwnProperty('api_key')) {\n                    store.setState({\n                        'api_key': response.data.api_key,\n                        'is_login': true,\n                        full_name: state.username,\n                        'email': response.data.email\n                    })\n                }\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    },\n\n    getNews: state => {\n        axios\n            .get(urlEverything)\n            .then(function(response) {\n                store.setState({ listNews: response.data.articles });\n                console.log(response.data);\n            })\n            .catch(function(error) {\n               console.log(error); \n            });\n\n        axios\n            .get(urlHeadline)\n            .then(function(response) {\n                store.setState({ listTopNews: response.data.articles });\n                console.log(response.data);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    },\n\n    doSearch(state, keyword) {\n        const urlSearch = 'https://newsapi.org/v2/everything?' + 'q=' + keyword + '&apiKey=66cd3036f20e42b199d9335f9283b88e';\n        axios\n            .get(urlSearch)\n            .then(function(response) {\n                store.setState({ listNews: response.data.articles });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    },\n\n    // airportDetail: state => {\n    //     axios\n    //     .get(urlAirport)\n    //     .then(function(response) {\n    //         store.setState({ \n    //             'airport_id_asal': response.data[0].airportId,\n    //             'airport_name_asal': response.data[0].nameAirport,\n    //             'nation_code_asal': response.data[0].codeIso2Country,\n    //             'latitude_asal': response.data[0].latitudeAirport,\n    //             'longitude_asal': response.data[0].longitudeAirport\n    //         });\n    //     })\n    //     .catch(function(error) {\n    //        console.log(error); \n    //     });\n    // },\n\n    // getFlightList: state => {\n    //     axios\n    //     .get(urlAirport)\n    //     .then(function(response) {\n    //         store.setState({ \n    //             'airport_id_asal': response.data[0].airportId,\n    //             'airport_name_asal': response.data[0].nameAirport,\n    //             'nation_code_asal': response.data[0].codeIso2Country,\n    //             'latitude': response.data[0].latitudeAirport,\n    //             'longitude': response.data[0].longitudeAirport\n    //         });\n    //     })\n    //     .catch(function(error) {\n    //        console.log(error); \n    //     });\n    // },\n\n    getWeather : async state => {\n        try {\n        const response = await axios.get(\n        \"http://api.weatherbit.io/v2.0/current?lat=-7.2575&lon=112.7521&key=aa3c976285c64dafa3662f2e99d4bd03\"\n        )\n        store.setState({weather: response.data.data[0].weather.description,\n        temperature: response.data.data[0].temp,\n        sunrise: response.data.data[0].sunrise,\n        sunset: response.data.data[0].sunset,\n        })\n        }\n        catch(error){\n        console.log(error)\n        }\n        },\n\n    getRates : async state => {\n        try {\n        const response = await axios.get(\n        \" https://api.exchangeratesapi.io/latest?base=IDR\"\n        )\n        store.setState({weather: response.data.rates.USD})\n        }\n        catch(error){\n        console.log(error)\n        }\n        },\n\n    rad : (state, x) => {\n        return x * Math.PI / 180;\n        },\n\n    getRange : (state, lat_asal, long_asal, lat_tujuan, long_tujuan) => {\n        // const rad = function(x) {\n        //     return x * Math.PI / 180;\n        //     };\n\n        const radius_bumi = 6378137; // Earthâ€™s mean radius in meter\n        const latitude = rad(lat_asal - lat_tujuan); // latitude awal - latitude akhir\n        const longitude = rad(long_asal - long_tujuan); // longitude awal - longitude akhir\n        const a = Math.sin(latitude / 2) * Math.sin(latitude / 2) + Math.cos(rad(lat_tujuan)) * Math.cos(rad(lat_asal)) * Math.sin(longitude / 2) * Math.sin(longitude / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance_in_km = (radius_bumi * c) / 1000;\n        const distance = Math.round(distance_in_km);\n        store.setState({range: distance})\n    },\n\n    // getData: async state => {\n    //     await axios\n    //     .all([\n    //     axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=d11ea5-5d02c1&codeIataAirport=\" + state.iata_asal),\n    //     axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=d11ea5-5d02c1&codeIataAirport=\" + state.iata_tujuan),\n    //     axios.get(\"http://api.weatherbit.io/v2.0/current?lat=-7.2575&lon=112.7521&key=aa3c976285c64dafa3662f2e99d4bd03\"),\n    //     axios.get(\"https://api.exchangeratesapi.io/latest?base=IDR\")\n    //     ])\n    //     .then(\n    //     axios.spread(function(response1, response2, response3, response4) {\n    //     store.setState({ \n    //         airport_id_asal: response1.data[0].airportId,\n    //         airport_name_asal: response1.data[0].nameAirport,\n    //         nation_code_asal: response1.data[0].codeIso2Country,\n    //         latitude_asal: response1.data[0].latitudeAirport,\n    //         longitude_asal: response1.data[0].longitudeAirport\n    //     });\n    //     store.setState({ \n    //         airport_id_tujuan: response2.data[0].airportId,\n    //         airport_name_tujuan: response2.data[0].nameAirport,\n    //         nation_code_tujuan: response2.data[0].codeIso2Country,\n    //         latitude_tujuan: response2.data[0].latitudeAirport,\n    //         longitude_tujuan: response2.data[0].longitudeAirport\n    //     });\n    //     store.setState({weather: response3.data.data[0].weather.description,\n    //         temperature: response3.data.data[0].temp,\n    //         sunrise: response3.data.data[0].sunrise,\n    //         sunset: response3.data.data[0].sunset,\n    //         });\n    //     store.setState({rate: response4.data.rates.USD});\n    //     })\n    //     )\n    //     .catch(function(error) {});\n    //     },\n        \n})"]},"metadata":{},"sourceType":"module"}