{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Project React/project_react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from 'unistore';\nimport axios from 'axios';\nvar initialState = {\n  api_key: \"\",\n  username: \"\",\n  password: \"\",\n  full_name: \"\",\n  email: \"\",\n  is_login: false,\n  iata_asal: \"\",\n  airport_id_asal: \"\",\n  airport_name_asal: \"\",\n  nation_code_asal: \"\",\n  latitude_asal: \"\",\n  longitude_asal: \"\",\n  iata_tujuan: \"\",\n  airport_id_tujuan: \"\",\n  airport_name_tujuan: \"\",\n  nation_code_tujuan: \"\",\n  latitude_tujuan: \"\",\n  longitude_tujuan: \"\",\n  flight_list: [],\n  weather: \"\",\n  code: \"\",\n  weather_code: \"\",\n  temperature: \"\",\n  sunrise: \"\",\n  sunset: \"\",\n  rate: \"\",\n  base_currency: \"\",\n  target_currency: \"\",\n  new_sum: \"\",\n  base_sum: \"\",\n  word: \"\",\n  distance_in_km: \"\"\n};\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, event) {\n      return _defineProperty({}, event.target.name, event.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false\n      };\n    },\n    postLogin: function () {\n      var _postLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                _context.next = 3;\n                return axios.post(\"https://ilfarro1.free.beeceptor.com/signin\", data).then(function (response) {\n                  console.log('post loginnnnnn!!!!', response.data);\n\n                  if (response.data.hasOwnProperty('api_key')) {\n                    store.setState({\n                      'api_key': response.data.api_key,\n                      'is_login': true,\n                      full_name: state.username,\n                      'email': response.data.email\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLogin(_x) {\n        return _postLogin.apply(this, arguments);\n      }\n\n      return postLogin;\n    }(),\n    setAsal: function setAsal(state, e) {\n      store.setState({\n        iata_asal: e.target.value\n      });\n    },\n    setTujuan: function setTujuan(state, e) {\n      store.setState({\n        iata_tujuan: e.target.value\n      });\n    },\n    setCurrAsal: function setCurrAsal(state, e) {\n      store.setState({\n        base_currency: e.target.value\n      });\n    },\n    setCurrTujuan: function setCurrTujuan(state, e) {\n      store.setState({\n        target_currency: e.target.value\n      });\n    },\n    getPrice: function getPrice(state, lat_asal, long_asal, lat_tujuan, long_tujuan) {\n      var rad = function rad(x) {\n        return x * Math.PI / 180;\n      };\n\n      var radius_bumi = 6378137; // Earthâ€™s mean radius in meter\n\n      var latitude = rad(lat_asal - lat_tujuan); // latitude awal - latitude akhir\n\n      var longitude = rad(long_asal - long_tujuan); // longitude awal - longitude akhir\n\n      var a = Math.sin(latitude / 2) * Math.sin(latitude / 2) + Math.cos(rad(lat_tujuan)) * Math.cos(rad(lat_asal)) * Math.sin(longitude / 2) * Math.sin(longitude / 2);\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      var distance_in_km = radius_bumi * c / 1000;\n      store.setState({\n        distance_in_km: distance_in_km\n      });\n    },\n    getNewCurrency: function () {\n      var _getNewCurrency = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state, moneysum) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"https://api.exchangeratesapi.io/latest?base=\" + state.base_currency).then(function (response) {\n                  store.setState({\n                    rate: response.data.rates[state.target_currency]\n                  });\n                  var new_value = state.rate * moneysum;\n                  store.setState({\n                    new_sum: new_value\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getNewCurrency(_x2, _x3) {\n        return _getNewCurrency.apply(this, arguments);\n      }\n\n      return getNewCurrency;\n    }(),\n    getWeather: function () {\n      var _getWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(state) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"http://api.weatherbit.io/v2.0/current?lat=\" + state.latitude_tujuan + \"&lon=\" + state.longitude_tujuan + \"&key=aa3c976285c64dafa3662f2e99d4bd03\").then(function (response) {\n                  store.setState({\n                    weather: response.data.data[0].weather.description,\n                    temperature: response.data.data[0].temp,\n                    sunrise: response.data.data[0].sunrise,\n                    sunset: response.data.data[0].sunset,\n                    weather_code: response.data.data[0].weather.code\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getWeather(_x4) {\n        return _getWeather.apply(this, arguments);\n      }\n\n      return getWeather;\n    }(),\n    getData: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(state) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.all([axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=eb2b4a-342a5e&codeIataAirport=\" + state.iata_asal), axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=eb2b4a-342a5e&codeIataAirport=\" + state.iata_tujuan), axios.get(\"http://aviation-edge.com/v2/public/timetable?key=eb2b4a-342a5e&type=departure&status=scheduled&iataCode=\" + state.iata_asal), axios.get(\"https://api.exchangeratesapi.io/latest?base=\" + state.base_currency)]).then(axios.spread(function (response1, response2, response3, response4) {\n                  store.setState({\n                    airport_id_asal: response1.data[0].airportId,\n                    airport_name_asal: response1.data[0].nameAirport,\n                    nation_code_asal: response1.data[0].codeIso2Country,\n                    latitude_asal: response1.data[0].latitudeAirport,\n                    longitude_asal: response1.data[0].longitudeAirport\n                  });\n                  store.setState({\n                    airport_id_tujuan: response2.data[0].airportId,\n                    airport_name_tujuan: response2.data[0].nameAirport,\n                    nation_code_tujuan: response2.data[0].codeIso2Country,\n                    latitude_tujuan: response2.data[0].latitudeAirport,\n                    longitude_tujuan: response2.data[0].longitudeAirport\n                  });\n                  store.setState({\n                    flight_list: response3.data\n                  });\n                  store.setState({\n                    rate: response4.data.rates.USD\n                  });\n                })).catch(function (error) {});\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getData(_x5) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  };\n};","map":{"version":3,"sources":["/home/alphatech/Project React/project_react/src/store.js"],"names":["createStore","axios","initialState","api_key","username","password","full_name","email","is_login","iata_asal","airport_id_asal","airport_name_asal","nation_code_asal","latitude_asal","longitude_asal","iata_tujuan","airport_id_tujuan","airport_name_tujuan","nation_code_tujuan","latitude_tujuan","longitude_tujuan","flight_list","weather","code","weather_code","temperature","sunrise","sunset","rate","base_currency","target_currency","new_sum","base_sum","word","distance_in_km","store","actions","setField","state","event","target","name","value","postLogout","postLogin","data","post","then","response","console","log","hasOwnProperty","setState","catch","error","setAsal","e","setTujuan","setCurrAsal","setCurrTujuan","getPrice","lat_asal","long_asal","lat_tujuan","long_tujuan","rad","x","Math","PI","radius_bumi","latitude","longitude","a","sin","cos","c","atan2","sqrt","getNewCurrency","moneysum","get","rates","new_value","getWeather","description","temp","getData","all","spread","response1","response2","response3","response4","airportId","nameAirport","codeIso2Country","latitudeAirport","longitudeAirport","USD"],"mappings":"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","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios';\n\nconst initialState = {\n    api_key: \"\",\n    username: \"\",\n    password: \"\",\n    full_name: \"\",\n    email: \"\",\n    is_login: false,\n    iata_asal: \"\",\n    airport_id_asal: \"\",\n    airport_name_asal: \"\",\n    nation_code_asal: \"\",\n    latitude_asal: \"\",\n    longitude_asal: \"\",\n    iata_tujuan: \"\",\n    airport_id_tujuan: \"\",\n    airport_name_tujuan: \"\",\n    nation_code_tujuan: \"\",\n    latitude_tujuan: \"\",\n    longitude_tujuan: \"\",\n    flight_list: [],\n    weather: \"\",\n    code: \"\",\n    weather_code: \"\",\n    temperature: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    rate: \"\",\n    base_currency:\"\",\n    target_currency:\"\",\n    new_sum:\"\",\n    base_sum: \"\",\n    word: \"\",\n    distance_in_km: \"\"\n};\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n    setField: (state, event) => {\n        return { [event.target.name]: event.target.value };\n    },\n\n    postLogout: state => {\n        return { is_login: false };\n    },\n\n    postLogin: async state => {\n        const data = { username: state.username, password: state.password };\n        await axios\n            .post(\"https://ilfarro1.free.beeceptor.com/signin\", data)\n            .then(response => {\n                console.log('post loginnnnnn!!!!', response.data)\n                if (response.data.hasOwnProperty('api_key')) {\n                    store.setState({\n                        'api_key': response.data.api_key,\n                        'is_login': true,\n                        full_name: state.username,\n                        'email': response.data.email\n                    })\n                }\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    },\n\n    setAsal: (state, e) => {\n        store.setState({ iata_asal: e.target.value })\n    },\n\n    setTujuan: (state, e) => {\n        store.setState({ iata_tujuan: e.target.value })\n    },\n\n    setCurrAsal : (state, e )=> {\n        store.setState({base_currency : e.target.value})\n    },\n    \n    setCurrTujuan : (state, e )=> {\n        store.setState({target_currency : e.target.value})\n    },\n\n    getPrice : (state, lat_asal, long_asal, lat_tujuan, long_tujuan) => {\n        const rad = function(x) {\n            return x * Math.PI / 180;\n            };\n\n        const radius_bumi = 6378137; // Earthâ€™s mean radius in meter\n        const latitude = rad(lat_asal - lat_tujuan); // latitude awal - latitude akhir\n        const longitude = rad(long_asal - long_tujuan); // longitude awal - longitude akhir\n        const a = Math.sin(latitude / 2) * Math.sin(latitude / 2) + Math.cos(rad(lat_tujuan)) * Math.cos(rad(lat_asal)) * Math.sin(longitude / 2) * Math.sin(longitude / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance_in_km = (radius_bumi * c) / 1000;\n        store.setState({distance_in_km: distance_in_km})\n    },\n\n    getNewCurrency: async (state, moneysum) => {\n        await axios\n        .get(\"https://api.exchangeratesapi.io/latest?base=\" + state.base_currency)\n        .then(function (response) {\n            store.setState({rate: response.data.rates[state.target_currency]})\n            const new_value = state.rate * moneysum\n            store.setState({new_sum: new_value})\n        })\n        .catch(function(error) {\n           console.log(error); \n        });\n    },\n    \n    getWeather: async state => {\n        await axios\n        .get(\"http://api.weatherbit.io/v2.0/current?lat=\" + state.latitude_tujuan + \"&lon=\" + state.longitude_tujuan + \"&key=aa3c976285c64dafa3662f2e99d4bd03\")\n        .then(function (response) {\n            store.setState({\n                weather: response.data.data[0].weather.description,\n                temperature: response.data.data[0].temp,\n                sunrise: response.data.data[0].sunrise,\n                sunset: response.data.data[0].sunset,\n                weather_code: response.data.data[0].weather.code\n                });\n        })\n        .catch(function(error) {\n           console.log(error); \n        });\n    },\n\n    getData: async state => {\n        await axios\n        .all([\n        axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=eb2b4a-342a5e&codeIataAirport=\" + state.iata_asal),\n        axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=eb2b4a-342a5e&codeIataAirport=\" + state.iata_tujuan),\n        axios.get(\"http://aviation-edge.com/v2/public/timetable?key=eb2b4a-342a5e&type=departure&status=scheduled&iataCode=\" + state.iata_asal),\n        axios.get(\"https://api.exchangeratesapi.io/latest?base=\" + state.base_currency),\n        ])\n        .then(\n        axios.spread(function(response1, response2, response3, response4) {\n        store.setState({ \n            airport_id_asal: response1.data[0].airportId,\n            airport_name_asal: response1.data[0].nameAirport,\n            nation_code_asal: response1.data[0].codeIso2Country,\n            latitude_asal: response1.data[0].latitudeAirport,\n            longitude_asal: response1.data[0].longitudeAirport\n        });\n        store.setState({ \n            airport_id_tujuan: response2.data[0].airportId,\n            airport_name_tujuan: response2.data[0].nameAirport,\n            nation_code_tujuan: response2.data[0].codeIso2Country,\n            latitude_tujuan: response2.data[0].latitudeAirport,\n            longitude_tujuan: response2.data[0].longitudeAirport\n        });\n        store.setState({ flight_list: response3.data });\n        store.setState({rate: response4.data.rates.USD});\n        })\n        )\n        .catch(function(error) {});\n        },\n        \n})"]},"metadata":{},"sourceType":"module"}